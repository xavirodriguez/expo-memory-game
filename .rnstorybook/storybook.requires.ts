/* do not change this file, it is auto generated by storybook. */

import { start, updateView } from '@storybook/react-native';

// Registrar addons de forma condicional
try {
  require('@storybook/addon-ondevice-controls/register');
} catch (e) {
  console.warn('addon-ondevice-controls not found');
}

try {
  require('@storybook/addon-ondevice-actions/register');  
} catch (e) {
  console.warn('addon-ondevice-actions not found');
}

const normalizedStories = [
  {
    titlePrefix: '',
    directory: './.rnstorybook/stories',
    files: '**/*.stories.?(ts|tsx|js|jsx)',
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(?:ts|tsx|js|jsx)?)$/,
    // @ts-ignore
    req: require.context(
      './stories',
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(?:ts|tsx|js|jsx)?)$/
    ),
  },
];

declare global {
  var view: ReturnType<typeof start>;
  var STORIES: typeof normalizedStories;
}

// Annotations con manejo de errores
const annotations = [
  require('./preview'),
  require('@storybook/react-native/dist/preview'),
];

// Añadir preview de addons solo si están disponibles
try {
  annotations.push(require('@storybook/addon-ondevice-actions/preview'));
} catch (e) {
  console.warn('addon-ondevice-actions/preview not found');
}

global.STORIES = normalizedStories;

// @ts-ignore
module?.hot?.accept?.();

if (!global.view) {
  global.view = start({
    annotations,
    storyEntries: normalizedStories,
  });
} else {
  updateView(global.view, annotations, normalizedStories);
}

export const view = global.view;